@page

@model JsPlayground.Pages.Javascript.Navigation.ChildrenModel

@{
    string pageId = "Children";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = pageId;
}

@section LibraryHeader {JavaScript}
@section BreadCrumbLibrary {javascript}
@section BreadCrumbAnchor {js-dom-navigation}
@section BreadCrumbChapter {dom navigation}
@section BreadCrumbPageName {@pageId.ToLower()}
@section PageName {@pageId}

<p>
    You can also identify an item in the DOM and get a collection of its children. Like so:
</p>

<hr />

<ul id="product-props">
    <li>Price: $9.99</li>
    <li>Artist: Van Gogh</li>
    <li>Title: </li>
    <li>Description: Self-portrait</li>
</ul>

<hr />

<div class="my-3">
    <h4 class="text-center text-info" id="demo1"></h4>
</div>

<pre>
<code>
let productInfo = document.getElementById("product-props");
let price = productInfo.children[0].innerHTML;
document.getElementById("demo1").innerHTML = price;
</code>
</pre>

<p>&nbsp;</p>

<p>&nbsp;</p>

@section Scripts
{
    <script>
        let productInfo = document.getElementById("product-props");
        let price = productInfo.children[0].innerHTML;
        document.getElementById("demo1").innerHTML = price;
    </script>
}
