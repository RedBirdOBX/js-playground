@page

@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = "Add Event Listener";
}

@section LibraryHeader {JavaScript}
@section BreadCrumbLibrary {javascript}
@section BreadCrumbAnchor {js-dom-events}
@section BreadCrumbChapter {dom events}
@section BreadCrumbPageName {add event listener}
@section PageName {Add Event Listener}

<p>
    The <code>addEventListener()</code> method attaches an event handler to the specified element. The <code>addEventListener()</code> method
    attaches an event handler to an element <strong>without</strong> overwriting existing event handlers.
</p>

<p>
    You can add many event handlers to one element. You can add many event handlers of the same type to one element, i.e
    two "click" events. You can add event listeners to any DOM object not only HTML elements. i.e the window object.
</p>

<p>
    The addEventListener() method makes it easier to control how the event reacts to bubbling.
</p>

<p>
    When using the addEventListener() method, the JavaScript is separated from the HTML markup, for better readability and
    allows you to add event listeners even when you do not control the HTML markup.
</p>

<code>element.addEventListener({event}, {function}, {useCapture});</code>

<ul class="mt-3">
    <li>The first parameter is the type of the event (like "click" or "mousedown").</li>
    <li>The second parameter is the function we want to call (or create an anonymous one) when the event occurs.</li>
    <li>
        The third parameter is a boolean value specifying whether to use event bubbling or event capturing. This parameter is
        optional.
    </li>
</ul>

<div class="text-center">
    <button type="button" id="TestButton" class="btn btn-danger">Try it</button>
</div>

<div class="my-3">
    <h4 class="text-center text-info"><span id="demo1"></span></h4>
    <h4 class="text-center text-info"><span id="demo2"></span></h4>
</div>

<pre>
<code>
//anonymous function
//document.getElementById("TestButton").addEventListener("click", function () { alert("Hello World!"); });

// calling functions
document.getElementById("TestButton").addEventListener("click", function(){ SayHello(); SayGoodBye(); });

function SayHello()
{
    let demo1 = document.getElementById("demo1");
    demo1.innerHTML = "Hello World";
}

function SayGoodBye()
{
    let demo1 = document.getElementById("demo2");
    demo1.innerHTML = "Good bye World";
}
</code>
</pre>

<p>&nbsp;</p>

<pre>
<code>
// other examples
element.addEventListener("mouseover", myFunction);
element.addEventListener("click", mySecondFunction);
element.addEventListener("mouseout", myThirdFunction);
</code>
</pre>

<p>You can also remove an event listener by using <code>removeEventLister()</code>.</p>

<p><code>element.removeEventListener("mousemove", myFunction);</code></p>

<p><a href="http://www.w3schools.com/js/js_htmldom_eventlistener.asp" target="_blank">http://www.w3schools.com/js/js_htmldom_eventlistener.asp</a></p>

<p>&nbsp;</p>

@section Scripts
{
    <script>
        //anonymous function
        //document.getElementById("TestButton").addEventListener("click", function () { alert("Hello World!"); });

        // calling functions
        document.getElementById("TestButton").addEventListener("click", function () { SayHello(); SayGoodBye(); });

        function SayHello() {
            let demo1 = document.getElementById("demo1");
            demo1.innerHTML = "Hello World";
        }

        function SayGoodBye() {
            let demo1 = document.getElementById("demo2");
            demo1.innerHTML = "Good bye World";
        }
    </script>
}
