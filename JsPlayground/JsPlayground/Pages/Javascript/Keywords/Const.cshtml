@page

@model JsPlayground.Pages.Javascript.Keywords.ConstModel

@{
    string pageId = "Const";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = pageId;
}

@section LibraryHeader {JavaScript}
@section BreadCrumbLibrary {javascript}
@section BreadCrumbAnchor {js-keywords}
@section BreadCrumbChapter {keywords}
@section BreadCrumbPageName {@pageId.ToLower()}
@section PageName {@pageId}

<p>
    ES2015 introduced two important new JavaScript keywords: <code>let</code> and <code>const</code>.
    Variables defined with const behave like let variables, except they cannot be reassigned.
</p>

<p>
    The keyword <code>const</code> is a little misleading.
    It does NOT define a constant value. It defines a constant reference to a value.
    Because of this, we cannot change constant primitive values,
    but we can change the properties of constant <strong>objects</strong>.
    If an object, you can change it's contents!
</p>

<pre>
<code>
const PI = 3.141592653589793;
PI = 3.14;      // This will give an error
PI = PI + 10;   // This will also give an error


// You can create a const object:
const car = {type:"Fiat", model:"500", color:"white"};

// You can change a property:
car.color = "red";

// You can add a property:
car.owner = "Johnson";
</code>
</pre>

<hr />

<pre>
<code>
let resistanceMsg = "I will resist!";
const borgMsg = "Resistance is futile!";

try
{
    // This will create an error
    borgMsg = resistanceMsg;
}
catch (error)
{
    alert("you cant reassign a const - dummy!");
    console.error(error);
}

let demo1 = document.getElementById("demo1");
demo1.innerHTML = borgMsg;
</code>
</pre>

<div class="card text-white bg-info mt-5">
    <div class="card-body">
        <div id="demo1"></div>
    </div>
</div>

<p>&nbsp;</p>

<p>&nbsp;</p>

@section Scripts
{
    <script>
        let resistanceMsg = "I will resist!";
        const borgMsg = "Resistance is futile!";

        try {
            // This will create an error
            borgMsg = resistanceMsg;
        }
        catch (error) {
            alert("you cant reassign a const - dummy!");
            console.error(error);
        }

        let demo1 = document.getElementById("demo1");
        demo1.innerHTML = borgMsg;
    </script>
}
