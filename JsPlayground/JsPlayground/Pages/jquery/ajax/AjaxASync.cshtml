@page

@model JsPlayground.Pages.jquery.ajax.AjaxASyncModel

@{
    string pageId = "Ajax async";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = pageId;
}

@section LibraryHeader {jQuery}
@section BreadCrumbLibrary {jquery}
@section BreadCrumbAnchor {jq-ajax}
@section BreadCrumbChapter {ajax}
@section BreadCrumbPageName {@pageId.ToLower()}
@section PageName {@pageId}

<p><a href="https://petetasker.com/using-async-await-jquerys-ajax" target="_blank">https://petetasker.com/using-async-await-jquerys-ajax</a></p>

<p>
    Imagine you needed to make a series of <code>jquery ajax</code> calls - each one dependent on the previous one.
    In this scenario, we want to get just the <em>first Point Of Interest from the first City</em> in a collection of Cities.
    For whatever imaginary reason, this needs to be 3 separate calls. We do not immediately know the city's
    <code>id</code> or the Point of Interest's <code>id</code>.
</p>

<p>
    The order of operations and three calls would be:
</p>

<ol>
    <li>Get the collection of Cities</li>
    <li>Get the first city from the collection (previous step) which will include all of the Points of Interests</li>
    <li>Get the first Point of Interest from the city's collection and utilize it.</li>
</ol>

<p>Each step must <code>await</code> the results of the previous.</p>

<p class="text-center">
    <button id="StartCallsButton"
            class="btn btn-success btn-lg"
            onclick="StartCalls();"
            type="button">
        Start The Calls
    </button>
</p>

<div id="demo-container" class="row d-none">
    <div class="col-12">
        <div class="card text-white bg-info">
            <div class="card-body">
                <div id="demo-content">
                </div>
            </div>
        </div>
    </div>
</div>

<p>&nbsp;</p>

<pre id="code-container" class="d-none">
<code>
async function StartCalls()
{
    // get all the cities...and use the first one
    let cities = await GetAllCities(1, 10);

    // get the city with its points of interest
    let city = await GetCityWithPointsOfInterest(cities[0].cityId);

    // get the point of interest
    let pointOfInterest = await GetFirstPointOfInterest(city.cityId, city.pointsOfInterest[0].pointId);

    let html = `cityId: ${pointOfInterest.cityId}&lt;br />`;
    html += `pointId: ${pointOfInterest.pointId}&lt;br />`;
    html += `description: ${pointOfInterest.description}`;
    $("#demo-content").html(html);
    $("#demo-container").removeClass("d-none");
    $("#code-container").removeClass("d-none");
}

async function GetAllCities(pageNum, pageSize)
{
    const ajaxGetSettings =
    {
        url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities?pagenumber=${pageNum}&pagesize=${pageSize}`,
        type: "GET"
    };

    // thorough version
    let apiResults = await $.ajax(ajaxGetSettings)
        .done(function (response, statusTxt, xhr)
        {
            // your done code here
            // if (xhr.status === 200)...etc
            console.dir(xhr.status);
            console.dir(xhr.statusText);
        })
        .fail(function (xhr, statusTxt, errorThrown)
        {
            // your fail code here
            console.error(`Error: ${errorThrown}`);
        })
        .always(() =>
        {
            // always is executed
            //console.log("GetAllCities called.");
        });
    return apiResults;
}

async function GetCityWithPointsOfInterest(cityId)
{
    const ajaxGetSettings =
    {
        url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/${cityId}?includePointsOfInterest=true`,
        type: "GET"
    };

    let apiResults = await $.ajax(ajaxGetSettings);
    return apiResults;
}

async function GetFirstPointOfInterest(cityId, pointId)
{
    const ajaxGetSettings =
    {
        url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/${cityId}/pointsofinterest/${pointId}`,
        type: "GET"
    };

    let apiResults = await $.ajax(ajaxGetSettings);
    return apiResults;
}
</code>
</pre>

<p>&nbsp;</p>


@section Scripts
{
    <script>
        async function StartCalls() {
            console.clear();
            console.log("Starting the calls....");

            // get all the cities...and use the first one
            let cities = await GetAllCities(1, 10);
            console.log("2) cities:");
            console.dir(cities);

            // get the city with its points of interest
            let city = await GetCityWithPointsOfInterest(cities[0].cityId);
            console.log("4) city:");
            console.dir(city);

            // get the point of interest
            let pointOfInterest = await GetFirstPointOfInterest(city.cityId, city.pointsOfInterest[0].pointId);
            console.log("6) point of interest:");
            console.dir(pointOfInterest);

            let html = `cityId: ${pointOfInterest.cityId}<br />`;
            html += `pointId: ${pointOfInterest.pointId}<br />`;
            html += `description: ${pointOfInterest.description}`;
            $("#demo-content").html(html);
            $("#demo-container").removeClass("d-none");
            $("#code-container").removeClass("d-none");
        }

        async function GetAllCities(pageNum, pageSize) {
            const ajaxGetSettings =
            {
                url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities?pagenumber=${pageNum}&pagesize=${pageSize}`,
                type: "GET"
            };

            let apiResults = await $.ajax(ajaxGetSettings)
                .done(function (response, statusTxt, xhr)
                {
                    // your done code here
                    // if (xhr.status === 200)...etc
                    console.dir(xhr.status);
                    console.dir(xhr.statusText);
                })
                .fail(function (xhr, statusTxt, errorThrown)
                {
                    // your fail code here
                    console.error(`Error: ${errorThrown}`);
                })
                .always(() => {
                    // always is executed
                    //console.log("GetAllCities called.");
                });
            console.log("1) all cities api results:");
            console.dir(apiResults);
            return apiResults;
        }

        async function GetCityWithPointsOfInterest(cityId) {
            const ajaxGetSettings =
            {
                url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/${cityId}?includePointsOfInterest=true`,
                type: "GET"
            };

            let apiResults = await $.ajax(ajaxGetSettings);
            console.log("3) city api results:");
            console.dir(apiResults);
            return apiResults;
        }

        async function GetFirstPointOfInterest(cityId, pointId) {
            const ajaxGetSettings =
            {
                url: `https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/${cityId}/pointsofinterest/${pointId}`,
                type: "GET"
            };

            let apiResults = await $.ajax(ajaxGetSettings);
            console.log("5) point of interest api results:");
            console.dir(apiResults);
            return apiResults;
        }
    </script>
}
