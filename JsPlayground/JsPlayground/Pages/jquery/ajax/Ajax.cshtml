@page

@model JsPlayground.Pages.jquery.ajax.AjaxModel

@{
    string pageId = "Ajax";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = pageId;
}

@section LibraryHeader {jQuery}
@section BreadCrumbLibrary {jquery}
@section BreadCrumbAnchor {jq-ajax}
@section BreadCrumbChapter {ajax}
@section BreadCrumbPageName {@pageId.ToLower()}
@section PageName {@pageId}

<p>
    The jQuery <code>ajax()</code> is a complete, very configurable, way to make an asynchronous HTTP request.  It is the most common.
</p>

<p>
    <a href="https://www.w3schools.com/jquery/ajax_ajax.asp" target="_blank">
        https://www.w3schools.com/jquery/ajax_ajax.asp
    </a><br />
    <a href=" https://api.jquery.com/jQuery.ajax/" target="_blank">
        https://api.jquery.com/jQuery.ajax/ (more up to date)
    </a>
</p>


<div class="m-5">
    <code>
        $.ajax({name:value, name:value, name:value... })
    </code>
</div>

<h4>GET Test</h4>

<p>
    This test will use a GET request and call the City Info DEMO API and grab a single city.
    <small>The first attempt will be slow.  The API will have to 'wake up'.</small>
</p>

<p class="text-center"><button id="GetTestButton" class="btn btn-success" type="button">GET Test AJAX Call</button></p>

<p>&nbsp;</p>

<h4>POST Test</h4>

<p>
    <code>contentType</code> is important to take inconsideration. The default is <code>application/x-www-form-urlencoded; charset=UTF-8</code>.
    If you use this method, you need to make sure you pass a <strong>object</strong> and not a serialized one/json.
</p>

<pre>
<code>
data: myObject,
contentType: "application/x-www-form-urlencoded",
</code>
</pre>

<p>
    You can also set the contentType to <code>contentType: "application/json"</code> (preferred way), but if you do,
    make sure you send a <strong>serialized</strong> object.
</p>

<pre>
<code>
data: JSON.stringify(myObject),
contentType: "application/json",
</code>
</pre>


<p>
    This can be tricky.  Double check all the settings (data, dataType, contentType, etc.).  After many trials,
    it finally worked. Another great resource to test this with is REQ |RES.
    <a href="https://reqres.in/" target="_blank">https://reqres.in/</a>.
</p>

<p class="text-center"><button id="PostTestButton" class="btn btn-success" type="button">POST Test AJAX Call</button></p>

<p>&nbsp;</p>

<div class="card text-white bg-info m-5 col-12">
    <div class="card-body">
        <div id="demo-content">
        </div>
    </div>
</div>

<pre>
<code>
$(document).ready(function ()
{
    // GET Test
    const ajaxGetSettings =
    {
        url: "https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/382762312d-a3e9-6f50873a95d2?includePointsOfInterest=true",
        type: "GET"
    };

    $("#GetTestButton").click(function ()
    {
        $.ajax(ajaxGetSettings).done(function (response)
        {
            ShowOutput(response);
        });
    });

    const newCity =
    {
        "name": "New City X",
        "description": "description of city x"
    };
    let json = JSON.stringify(newCity);


    // you can also add header data like so:
    //headers:
    //{
    //    "Accept": "application/json",
    //    "Access-Control-Allow-Origin": "*",
    //    "Access-Control-Allow-Headers": "Origin, X-Requested-With, Content-Type, Accept",
    //    "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS",
    //    "Content-Type": "application/json"
    //}

    const ajaxPostSettings =
    {
        url: "http://localhost:5000/api/v1.0/cities/",
        method: "POST",
        data: json,
        dataType: "json",
        contentType: "application/json"
    };

    $("#PostTestButton").click(function ()
    {
        console.dir(ajaxPostSettings);

        $.ajax(ajaxPostSettings).done(function (response)
        {
            ShowOutput(response);
        });
    });

    const ShowOutput = (response) =>
    {
        console.dir(response);

        let output = `${response.cityId}&lt;br />`;
        output += `${response.name}&lt;br />`;
        output += `${response.description}&lt;br />`;

        $("#demo-content").html(`${output} (view the console)`);
    };
});

</code>
</pre>

@section Scripts
{
    <script>
        $(document).ready(function ()
        {
            // GET Test
            const ajaxGetSettings =
            {
                url: "https://city-info-api-prod.azurewebsites.net/api/v1.0/cities/38276231-1918-452d-a3e9-6f50873a95d2?includePointsOfInterest=true",
                type: "GET"
            };

            $("#GetTestButton").click(function () {
                $.ajax(ajaxGetSettings).done(function (response) {
                    ShowOutput(response);
                });
            });

            // POST Test for ReqRes
            //const newUser =
            //{
            //    // test api
            //    "name": "morpheus",
            //    "job": "leader"
            //};

            // POST Test for City Info API
            const newCity =
            {
                "name": "New City X",
                "description": "description of city x"
            };

            let json = JSON.stringify(newCity);


            // Settings
            //url: "https://city-info-api-prod.azurewebsites.net/api/v1.0/cities",
            //url: "https://postman-echo.com/post",
            //url: "https://reqres.in/api/users",

            // you can also add header data like so:
            //headers:
            //{
            //    "Accept": "application/json",
            //    "Access-Control-Allow-Origin": "*",
            //    "Access-Control-Allow-Headers": "Origin, X-Requested-With, Content-Type, Accept",
            //    "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS",
            //    "Content-Type": "application/json"
            //}

            const ajaxPostSettings =
            {
                url: "http://localhost:5000/api/v1.0/cities/",
                method: "POST",
                data: json,
                dataType: "json",
                contentType: "application/json"
            };

            $("#PostTestButton").click(function ()
            {
                console.dir(ajaxPostSettings);

                $.ajax(ajaxPostSettings).done(function (response)
                {
                    ShowOutput(response);
                });
            });

            const ShowOutput = (response) =>
            {
                console.dir(response);

                let output = `${response.cityId}<br />`;
                output += `${response.name}<br />`;
                output += `${response.description}<br />`;

                $("#demo-content").html(`${output} (view the console)`);
            };
        });
    </script>
}
