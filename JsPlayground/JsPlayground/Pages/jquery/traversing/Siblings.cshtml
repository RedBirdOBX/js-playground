@page

@model JsPlayground.Pages.jquery.traversing.SiblingsModel

@{
    string pageId = "siblings";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = pageId;
}

@section LibraryHeader {jQuery}
@section BreadCrumbLibrary {jquery}
@section BreadCrumbAnchor {jq-traversing}
@section BreadCrumbChapter {traversing}
@section BreadCrumbPageName {@pageId.ToLower()}
@section PageName {@pageId}

<p>
    The <code>siblings()</code> method returns all sibling elements of the selected element. Siblings as in the sense of all matches of the
    declared element which are the <strong>same level</strong>.
    It will <strong>exclude</strong> the one you declare but find it's siblings. It will
    find matches both above and below the declared element.
</p>

<p class="text-center"><button type="button" id="btnDemo" class="btn btn-lg btn-success">Siblings</button></p>

<ul>
    <li>list item 1</li>
    <li>list item 2</li>
    <li class="third-item">list item 3</li>
    <li>list item 4</li>
    <li>list item 5</li>
</ul>

<pre>
<code>
$("#btnDemo").click(function ()
{
    $("li.third-item").siblings().css({ "font-weight": "bold", "color": "red" });
});
</code>
</pre>

<p>&nbsp;</p>

<p>&nbsp;</p>

@section Scripts
{
    <script>
        $("#btnDemo").click(function () {
            $("li.third-item").siblings().css({ "font-weight": "bold", "color": "red" });
        });
    </script>
}